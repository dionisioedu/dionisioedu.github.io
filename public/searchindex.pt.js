var relearn_searchindex = [
  {
    "breadcrumb": "",
    "content": "",
    "description": "Artigos, Not√≠cias, Livros e Mentoria para alavancar sua Carreira",
    "tags": [],
    "title": "Desenvolvimento de Software e Carreira Tech",
    "uri": "/index.html"
  },
  {
    "breadcrumb": "Desenvolvimento de Software e Carreira Tech",
    "content": "Artigos e not√≠cias",
    "description": "Artigos e not√≠cias",
    "tags": [],
    "title": "Artigos e Not√≠cias",
    "uri": "/blog/index.html"
  },
  {
    "breadcrumb": "Desenvolvimento de Software e Carreira Tech¬†\u003e¬† eBooks",
    "content": "üìò Guia do Dev Iniciante Quer entrar no mercado de tecnologia, mas n√£o sabe por onde come√ßar? O Guia do Dev Iniciante √© o eBook que te ensina tudo o que voc√™ precisa saber para conquistar sua primeira vaga como desenvolvedor.\nNeste guia pr√°tico e direto ao ponto, voc√™ vai aprender os conhecimentos essenciais, como linguagens de programa√ß√£o, l√≥gica, GitHub, APIs, bancos de dados e metodologias √°geis.\nAl√©m disso, te mostramos como criar um portf√≥lio poderoso, montar um curr√≠culo vencedor e se destacar em entrevistas t√©cnicas.\nSe voc√™ quer acelerar sua jornada e conquistar sua vaga na √°rea tech o mais r√°pido poss√≠vel, este eBook foi feito para voc√™! üöÄ\nüí∞ De R$47,90 por apenas R$27,90! üéâ üëâ COMPRAR AGORA POR R$ 27,90{ .button }",
    "description": "üìò Guia do Dev Iniciante Quer entrar no mercado de tecnologia, mas n√£o sabe por onde come√ßar? O Guia do Dev Iniciante √© o eBook que te ensina tudo o que voc√™ precisa saber para conquistar sua primeira vaga como desenvolvedor.\nNeste guia pr√°tico e direto ao ponto, voc√™ vai aprender os conhecimentos essenciais, como linguagens de programa√ß√£o, l√≥gica, GitHub, APIs, bancos de dados e metodologias √°geis.\nAl√©m disso, te mostramos como criar um portf√≥lio poderoso, montar um curr√≠culo vencedor e se destacar em entrevistas t√©cnicas.",
    "tags": [],
    "title": "O Guia do Dev Iniciante",
    "uri": "/ebooks/guia/index.html"
  },
  {
    "breadcrumb": "Desenvolvimento de Software e Carreira Tech",
    "content": "",
    "description": "",
    "tags": [],
    "title": "Testes e aplicativos",
    "uri": "/apps/index.html"
  },
  {
    "breadcrumb": "Desenvolvimento de Software e Carreira Tech",
    "content": "",
    "description": "",
    "tags": [],
    "title": "Projetos e Portf√≥lio",
    "uri": "/projects/index.html"
  },
  {
    "breadcrumb": "Desenvolvimento de Software e Carreira Tech",
    "content": "",
    "description": "",
    "tags": [],
    "title": "C++",
    "uri": "/cpp/index.html"
  },
  {
    "breadcrumb": "Desenvolvimento de Software e Carreira Tech",
    "content": "",
    "description": "",
    "tags": [],
    "title": "C++ e STL",
    "uri": "/cstl/index.html"
  },
  {
    "breadcrumb": "Desenvolvimento de Software e Carreira Tech",
    "content": "üìö Aqui voc√™ encontra os eBooks produzidos por mim sobre desenvolvimento de software, C/C++, produtividade e carreira t√©cnica.\nDominando a STL em C++ Arquitetura para Devs Iniciantes 10 Estrat√©gias para Evoluir na Carreira Em breve, voc√™ poder√° baixar e receber notifica√ß√µes por email de novos lan√ßamentos!",
    "description": "üìö Aqui voc√™ encontra os eBooks produzidos por mim sobre desenvolvimento de software, C/C++, produtividade e carreira t√©cnica.\nDominando a STL em C++ Arquitetura para Devs Iniciantes 10 Estrat√©gias para Evoluir na Carreira Em breve, voc√™ poder√° baixar e receber notifica√ß√µes por email de novos lan√ßamentos!",
    "tags": [],
    "title": "eBooks",
    "uri": "/ebooks/index.html"
  },
  {
    "breadcrumb": "Desenvolvimento de Software e Carreira Tech¬†\u003e¬† Etiquetas",
    "content": "",
    "description": "",
    "tags": [],
    "title": "Etiqueta | Algoritmos",
    "uri": "/tags/algoritmos/index.html"
  },
  {
    "breadcrumb": "Desenvolvimento de Software e Carreira Tech¬†\u003e¬† Etiquetas",
    "content": "",
    "description": "",
    "tags": [],
    "title": "Etiqueta | C++",
    "uri": "/tags/c\u0026#43;\u0026#43;/index.html"
  },
  {
    "breadcrumb": "Desenvolvimento de Software e Carreira Tech¬†\u003e¬† Etiquetas",
    "content": "",
    "description": "",
    "tags": [],
    "title": "Etiqueta | Cont√™ineres",
    "uri": "/tags/cont%C3%AAineres/index.html"
  },
  {
    "breadcrumb": "Desenvolvimento de Software e Carreira Tech¬†\u003e¬† Etiquetas",
    "content": "",
    "description": "",
    "tags": [],
    "title": "Etiqueta | Programa√ß√£o",
    "uri": "/tags/programa%C3%A7%C3%A3o/index.html"
  },
  {
    "breadcrumb": "Desenvolvimento de Software e Carreira Tech¬†\u003e¬† C++",
    "content": "A Standard Template Library (STL) √© um componente essencial da biblioteca padr√£o do C++, fornecendo ferramentas gen√©ricas e eficientes para manipula√ß√£o de dados, algoritmos e estruturas de dados. Projetada para ser flex√≠vel e reutiliz√°vel, a STL utiliza templates para permitir opera√ß√µes em diferentes tipos de dados sem perda de desempenho. Este artigo apresenta uma vis√£o geral da STL, sua hist√≥ria e uma lista de suas principais fun√ß√µes, agrupadas por cabe√ßalho, com links para p√°ginas detalhadas de cada fun√ß√£o.\nO que √© a STL? A STL √© uma biblioteca que faz parte do padr√£o C++ desde 1998 (C++98), oferecendo:\nCont√™ineres: Estruturas de dados como vector, list, map, set, etc. Algoritmos: Fun√ß√µes gen√©ricas para busca, ordena√ß√£o, manipula√ß√£o de intervalos, etc., como sort, find e accumulate. Iteradores: Objetos que permitem navegar pelos elementos dos cont√™ineres. Fun√ß√µes utilit√°rias: Ferramentas como make_pair, move e ponteiros inteligentes (unique_ptr, shared_ptr). A STL √© projetada para ser eficiente, gen√©rica e extens√≠vel, permitindo que programadores combinem seus componentes de maneira modular para resolver uma ampla gama de problemas.\nBreve Hist√≥ria da STL A STL foi originalmente desenvolvida por Alexander Stepanov, Meng Lee e David Musser na Hewlett-Packard (HP) no in√≠cio dos anos 1990. Inspirada por conceitos de programa√ß√£o gen√©rica e paradigmas funcionais, a STL foi proposta para padronizar algoritmos e estruturas de dados reutiliz√°veis em C++. Em 1994, a STL foi incorporada √† proposta do padr√£o C++98, tornando-se parte oficial da linguagem. Desde ent√£o, a STL evoluiu com novas funcionalidades em C++11, C++17, C++20 e al√©m, incluindo melhorias como std::string_view, std::span e algoritmos paralelos.\nA STL revolucionou a programa√ß√£o em C++ ao introduzir um modelo gen√©rico que combina efici√™ncia com flexibilidade, influenciando outras linguagens e bibliotecas modernas.\nFun√ß√µes da STL por Cabe√ßalho Abaixo est√° uma lista das principais fun√ß√µes da STL, organizadas por cabe√ßalho. Cada fun√ß√£o tem um link para uma p√°gina futura com detalhes espec√≠ficos (a ser criada). As fun√ß√µes est√£o agrupadas por cabe√ßalho, pois este √© o modo natural como a STL organiza seus componentes, facilitando a navega√ß√£o e a consulta.\n\u003calgorithm\u003e Este cabe√ßalho cont√©m algoritmos gen√©ricos para manipula√ß√£o de intervalos, incluindo ordena√ß√£o, busca e modifica√ß√£o.\nstd::sort - Ordena elementos em um intervalo. std::find - Busca um valor espec√≠fico em um intervalo. std::for_each - Aplica uma fun√ß√£o a cada elemento de um intervalo. std::transform - Aplica uma opera√ß√£o a elementos e armazena os resultados. std::binary_search - Verifica se um valor existe em um intervalo ordenado. std::lower_bound - Encontra o primeiro elemento n√£o menor que um valor. std::upper_bound - Encontra o primeiro elemento maior que um valor. std::find_if - Busca o primeiro elemento que satisfaz um predicado. std::count - Conta elementos iguais a um valor. std::set_union - Combina dois intervalos ordenados em uma uni√£o. std::set_intersection - Gera a interse√ß√£o de dois intervalos ordenados. std::set_difference - Gera a diferen√ßa de dois intervalos ordenados. std::copy - Copia elementos de um intervalo para outro. std::move - Move elementos de um intervalo para outro. std::fill - Preenche um intervalo com um valor espec√≠fico. std::replace - Substitui elementos iguais a um valor por outro. std::partition - Particiona um intervalo com base em um predicado. std::stable_partition - Particiona um intervalo mantendo a ordem relativa. \u003cnumeric\u003e Este cabe√ßalho fornece algoritmos num√©ricos para c√°lculos em intervalos.\nstd::accumulate - Acumula valores de um intervalo. std::iota - Preenche um intervalo com valores incrementais. std::inner_product - Calcula o produto interno de dois intervalos. std::adjacent_difference - Calcula diferen√ßas entre elementos adjacentes. \u003cvector\u003e Cont√©m fun√ß√µes para manipula√ß√£o de vetores din√¢micos.\nstd::vector::push_back - Adiciona um elemento ao final do vetor. std::vector::emplace_back - Constr√≥i um elemento diretamente no final do vetor. \u003clist\u003e Cont√©m fun√ß√µes para manipula√ß√£o de listas duplamente encadeadas.\nstd::list::splice - Transfere elementos de uma lista para outra. \u003cmap\u003e Cont√©m fun√ß√µes para manipula√ß√£o de mapas associativos ordenados.\nstd::map::insert - Insere um par chave-valor em um mapa. \u003cunordered_map\u003e Cont√©m fun√ß√µes para manipula√ß√£o de mapas associativos n√£o ordenados.\nstd::unordered_map::find - Busca um elemento pela chave. \u003cdeque\u003e Cont√©m fun√ß√µes para manipula√ß√£o de deques (filas de duas extremidades).\nstd::deque::push_front - Adiciona um elemento ao in√≠cio de uma deque. \u003cset\u003e Cont√©m fun√ß√µes para manipula√ß√£o de conjuntos ordenados.\nstd::set::erase - Remove elementos de um conjunto. \u003cutility\u003e Cont√©m fun√ß√µes utilit√°rias para manipula√ß√£o de pares e movimenta√ß√£o.\nstd::make_pair - Cria um std::pair a partir de dois valores. std::move - Converte um objeto em uma refer√™ncia rvalue. std::swap - Troca os valores de dois objetos. std::tie - Cria uma tupla de refer√™ncias para desempacotar valores. \u003cmemory\u003e Cont√©m fun√ß√µes para gerenciamento de mem√≥ria din√¢mica.\nstd::unique_ptr - Gerencia a posse exclusiva de um ponteiro. std::make_unique - Cria um std::unique_ptr com um objeto constru√≠do. std::shared_ptr - Gerencia a posse compartilhada de um ponteiro. std::make_shared - Cria um std::shared_ptr com um objeto constru√≠do. \u003cstring\u003e Cont√©m fun√ß√µes para manipula√ß√£o de strings.\nstd::to_string - Converte um valor num√©rico em uma string. std::string::starts_with - Verifica se uma string come√ßa com um prefixo. std::string::ends_with - Verifica se uma string termina com um sufixo. Pr√≥ximos Passos Cada fun√ß√£o listada acima ter√° sua pr√≥pria p√°gina detalhada, incluindo par√¢metros, retornos, exce√ß√µes, exemplos e desempenho. Consulte as p√°ginas individuais para aprofundar seu conhecimento sobre cada fun√ß√£o da STL.\nPara contribuir com esta wiki ou sugerir melhorias, envie um coment√°rio ou pull request no reposit√≥rio do projeto em dionisio.dev!",
    "description": "Uma introdu√ß√£o √† Standard Template Library (STL) do C++, sua hist√≥ria e uma lista de fun√ß√µes agrupadas por cabe√ßalho.",
    "tags": [
      "C++",
      "STL",
      "Programa√ß√£o",
      "Algoritmos",
      "Cont√™ineres"
    ],
    "title": "Standard Template Library (STL)",
    "uri": "/cpp/stl/index.html"
  },
  {
    "breadcrumb": "Desenvolvimento de Software e Carreira Tech¬†\u003e¬† Etiquetas",
    "content": "",
    "description": "",
    "tags": [],
    "title": "Etiqueta | STL",
    "uri": "/tags/stl/index.html"
  },
  {
    "breadcrumb": "Desenvolvimento de Software e Carreira Tech",
    "content": "",
    "description": "",
    "tags": [],
    "title": "Etiquetas",
    "uri": "/tags/index.html"
  },
  {
    "breadcrumb": "Desenvolvimento de Software e Carreira Tech",
    "content": "",
    "description": "",
    "tags": [],
    "title": "Categorias",
    "uri": "/categories/index.html"
  }
]
